#ifdef GL_ES
precision highp float;
#endif

// Quick shader implementation of "Aliasing Artifacts and Algorithmic Art
// https://pdfs.semanticscholar.org/f374/fe62813bf2eef076a167c1c41dbc536a3547.pdf

// Version D
// Made by David


uniform float time;
uniform vec2 resolution;

void main( void ) {

	// Grid Density (make number larger to have more dots)
	float density = 0.01;
		
	vec2 position = gl_FragCoord.xy - (vec2(0.5, 0.5)*resolution);
	float xs = position.x * position.x;
	float ys = position.y * position.y;
	
	float timeScale = 20.0;
	
	float z1 = sin(timeScale*sin(time/10.0)*density*(xs + ys)) ;
	float z2 = cos(timeScale*sin(time/10.0)*density*(xs + ys)) ;
	float z3 = tan(timeScale*sin(time/10.0)*density*(xs + ys)) ;
	
	gl_FragColor = vec4(z1,z2,z3,1.0);

}